{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\serik\\\\Desktop\\\\Projects React\\\\Pizza\\\\my-app\\\\src\\\\components\\\\SortPopup.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SortPopup = /*#__PURE__*/React.memo(_c = _s(function SortPopup({\n  items,\n  onSelectSortType\n}) {\n  _s();\n\n  const [isVisible, setIsVisible] = useState(false);\n  const [activeItem, setActiveItem] = useState(0);\n  const sortRef = useRef(null);\n  const label = items[activeItem];\n\n  function toggleVisiblePopup() {\n    setIsVisible(!isVisible);\n  }\n\n  function handleOutsideClick(e) {\n    if (!e.path.includes(sortRef.current)) {\n      setIsVisible(false);\n    }\n  }\n\n  function onSelectItem(index, item) {\n    onSelectSortType(item);\n    setActiveItem(index);\n  }\n\n  useEffect(() => {\n    document.body.addEventListener('click', handleOutsideClick);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: sortRef,\n    className: \"sort\",\n    children: isVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sort__popup\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: items && items.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: activeItem === index ? 'active' : '',\n          onClick: () => {\n            onSelectItem(index, item.type);\n          },\n          children: item.name\n        }, `${item.type}_${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}, \"q/AE5dmcsJK8E+/D4xlF6lI6zrM=\"));\n_c2 = SortPopup;\nexport default SortPopup;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SortPopup$React.memo\");\n$RefreshReg$(_c2, \"SortPopup\");","map":{"version":3,"sources":["C:/Users/serik/Desktop/Projects React/Pizza/my-app/src/components/SortPopup.jsx"],"names":["React","useEffect","useRef","useState","SortPopup","memo","items","onSelectSortType","isVisible","setIsVisible","activeItem","setActiveItem","sortRef","label","toggleVisiblePopup","handleOutsideClick","e","path","includes","current","onSelectItem","index","item","document","body","addEventListener","map","type","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,MAAzB,EAAiCC,QAAjC,QAAgD,OAAhD;;AAEA,MAAMC,SAAS,gBAAGJ,KAAK,CAACK,IAAN,SAAW,SAASD,SAAT,CAAmB;AAAEE,EAAAA,KAAF;AAAQC,EAAAA;AAAR,CAAnB,EAA+C;AAAA;;AACxE,QAAM,CAACC,SAAD,EAAWC,YAAX,IAA2BN,QAAQ,CAAC,KAAD,CAAzC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAMS,OAAO,GAAGV,MAAM,CAAC,IAAD,CAAtB;AACA,QAAMW,KAAK,GAAGP,KAAK,CAACI,UAAD,CAAnB;;AAEA,WAASI,kBAAT,GAA8B;AAC1BL,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACH;;AAED,WAASO,kBAAT,CAA4BC,CAA5B,EAA+B;AAC3B,QAAI,CAACA,CAAC,CAACC,IAAF,CAAOC,QAAP,CAAgBN,OAAO,CAACO,OAAxB,CAAL,EAAuC;AACnCV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ;;AAED,WAASW,YAAT,CAAsBC,KAAtB,EAA4BC,IAA5B,EAAkC;AAC9Bf,IAAAA,gBAAgB,CAACe,IAAD,CAAhB;AACAX,IAAAA,aAAa,CAACU,KAAD,CAAb;AACH;;AAEDpB,EAAAA,SAAS,CAAC,MAAM;AACZsB,IAAAA,QAAQ,CAACC,IAAT,CAAcC,gBAAd,CAA+B,OAA/B,EAAwCV,kBAAxC;AACH,GAFQ,EAEP,EAFO,CAAT;AAIA,sBACI;AAAK,IAAA,GAAG,EAAGH,OAAX;AAAoB,IAAA,SAAS,EAAC,MAA9B;AAAA,cAEKJ,SAAS,iBACN;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACI;AAAA,kBACKF,KAAK,IACFA,KAAK,CAACoB,GAAN,CAAU,CAACJ,IAAD,EAAOD,KAAP,kBACN;AAEI,UAAA,SAAS,EAAEX,UAAU,KAAKW,KAAf,GAAuB,QAAvB,GAAkC,EAFjD;AAGI,UAAA,OAAO,EAAE,MAAM;AAAED,YAAAA,YAAY,CAACC,KAAD,EAAOC,IAAI,CAACK,IAAZ,CAAZ;AAA+B,WAHpD;AAAA,oBAIKL,IAAI,CAACM;AAJV,WACU,GAAEN,IAAI,CAACK,IAAK,IAAGN,KAAM,EAD/B;AAAA;AAAA;AAAA;AAAA,gBADJ;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAHR;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CA7CiB,kCAAlB;MAAMjB,S;AA+CN,eAAeA,SAAf","sourcesContent":["import React,{useEffect, useRef, useState} from 'react';\r\n\r\nconst SortPopup = React.memo(function SortPopup({ items,onSelectSortType }) {\r\n    const [isVisible,setIsVisible] = useState(false)\r\n    const [activeItem, setActiveItem] = useState(0)\r\n    const sortRef = useRef(null)\r\n    const label = items[activeItem]\r\n\r\n    function toggleVisiblePopup() {\r\n        setIsVisible(!isVisible)\r\n    }\r\n\r\n    function handleOutsideClick(e) {\r\n        if (!e.path.includes(sortRef.current)) {\r\n            setIsVisible(false)\r\n        }\r\n    }\r\n\r\n    function onSelectItem(index,item) {\r\n        onSelectSortType(item)\r\n        setActiveItem(index)\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.body.addEventListener('click', handleOutsideClick)\r\n    },[])\r\n\r\n    return (\r\n        <div ref={ sortRef }className=\"sort\">\r\n              \r\n            {isVisible &&\r\n                <div className=\"sort__popup\">\r\n                    <ul>\r\n                        {items &&\r\n                            items.map((item, index) => (\r\n                                <li\r\n                                    key={`${item.type}_${index}`}\r\n                                    className={activeItem === index ? 'active' : ''}\r\n                                    onClick={() => { onSelectItem(index,item.type) }}>\r\n                                    {item.name}\r\n                                </li>\r\n                            ))}\r\n                    </ul>\r\n                </div>\r\n            }\r\n            </div>\r\n    );\r\n})\r\n\r\nexport default SortPopup;"]},"metadata":{},"sourceType":"module"}