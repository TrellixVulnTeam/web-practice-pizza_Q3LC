{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\serik\\\\Desktop\\\\Projects React\\\\Pizza\\\\my-app\\\\src\\\\components\\\\SortPopup.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SortPopup = /*#__PURE__*/React.memo(_c = _s(function SortPopup({\n  activeItem,\n  items,\n  onSelectSortType\n}) {\n  _s();\n\n  const [isVisible, setIsVisible] = useState(false);\n  const sortRef = useRef(null);\n  const label = activeItem;\n\n  function toggleVisiblePopup() {\n    setIsVisible(!isVisible);\n  }\n\n  function handleOutsideClick(e) {\n    if (!e.path.includes(sortRef.current)) {\n      setIsVisible(false);\n    }\n  }\n\n  function onSelectItem(index, item) {\n    onSelectSortType(item);\n  }\n\n  useEffect(() => {\n    console.log(activeItem);\n    document.body.addEventListener('click', handleOutsideClick);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: sortRef,\n    className: \"sort\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sort__label\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        className: isVisible ? 'rotated' : '',\n        width: \"10\",\n        height: \"6\",\n        viewBox: \"0 0 10 6\",\n        fill: \"none\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\",\n          fill: \"#2C2C2C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"\\u0421\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430 \\u043F\\u043E:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: toggleVisiblePopup,\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }, this), isVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sort__popup\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: items && items.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: activeItem === index ? 'active' : '',\n          onClick: () => {\n            onSelectItem(index, item);\n          },\n          children: item\n        }, `${item}_${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}, \"6PW135rllLfsrOjjpRpInxHwUpM=\"));\n_c2 = SortPopup;\nexport default SortPopup;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SortPopup$React.memo\");\n$RefreshReg$(_c2, \"SortPopup\");","map":{"version":3,"sources":["C:/Users/serik/Desktop/Projects React/Pizza/my-app/src/components/SortPopup.jsx"],"names":["React","useEffect","useRef","useState","SortPopup","memo","activeItem","items","onSelectSortType","isVisible","setIsVisible","sortRef","label","toggleVisiblePopup","handleOutsideClick","e","path","includes","current","onSelectItem","index","item","console","log","document","body","addEventListener","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,MAAzB,EAAiCC,QAAjC,QAAgD,OAAhD;;AAEA,MAAMC,SAAS,gBAAGJ,KAAK,CAACK,IAAN,SAAW,SAASD,SAAT,CAAmB;AAAEE,EAAAA,UAAF;AAAaC,EAAAA,KAAb;AAAmBC,EAAAA;AAAnB,CAAnB,EAA0D;AAAA;;AACnF,QAAM,CAACC,SAAD,EAAWC,YAAX,IAA2BP,QAAQ,CAAC,KAAD,CAAzC;AACA,QAAMQ,OAAO,GAAGT,MAAM,CAAC,IAAD,CAAtB;AACA,QAAMU,KAAK,GAAGN,UAAd;;AAEA,WAASO,kBAAT,GAA8B;AAC1BH,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACH;;AAED,WAASK,kBAAT,CAA4BC,CAA5B,EAA+B;AAC3B,QAAI,CAACA,CAAC,CAACC,IAAF,CAAOC,QAAP,CAAgBN,OAAO,CAACO,OAAxB,CAAL,EAAuC;AACnCR,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ;;AAED,WAASS,YAAT,CAAsBC,KAAtB,EAA4BC,IAA5B,EAAkC;AAC9Bb,IAAAA,gBAAgB,CAACa,IAAD,CAAhB;AACH;;AAEDpB,EAAAA,SAAS,CAAC,MAAM;AACZqB,IAAAA,OAAO,CAACC,GAAR,CAAYjB,UAAZ;AACAkB,IAAAA,QAAQ,CAACC,IAAT,CAAcC,gBAAd,CAA+B,OAA/B,EAAwCZ,kBAAxC;AACH,GAHQ,EAGP,EAHO,CAAT;AAKA,sBACI;AAAK,IAAA,GAAG,EAAGH,OAAX;AAAoB,IAAA,SAAS,EAAC,MAA9B;AAAA,4BACM;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AACE,QAAA,SAAS,EAAEF,SAAS,GAAC,SAAD,GAAW,EADjC;AAEE,QAAA,KAAK,EAAC,IAFR;AAGE,QAAA,MAAM,EAAC,GAHT;AAIE,QAAA,OAAO,EAAC,UAJV;AAKE,QAAA,IAAI,EAAC,MALP;AAME,QAAA,KAAK,EAAC,4BANR;AAAA,+BAQE;AACE,UAAA,CAAC,EAAC,2WADJ;AAEE,UAAA,IAAI,EAAC;AAFP;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,cADF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF,eAeE;AAAM,QAAA,OAAO,EAAEI,kBAAf;AAAA,kBAAqCD;AAArC;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YADN,EAkBKH,SAAS,iBACN;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACI;AAAA,kBACKF,KAAK,IACFA,KAAK,CAACoB,GAAN,CAAU,CAACN,IAAD,EAAOD,KAAP,kBACN;AAEI,UAAA,SAAS,EAAEd,UAAU,KAAKc,KAAf,GAAuB,QAAvB,GAAkC,EAFjD;AAGI,UAAA,OAAO,EAAE,MAAM;AAAED,YAAAA,YAAY,CAACC,KAAD,EAAOC,IAAP,CAAZ;AAA0B,WAH/C;AAAA,oBAIKA;AAJL,WACU,GAAEA,IAAK,IAAGD,KAAM,EAD1B;AAAA;AAAA;AAAA;AAAA,gBADJ;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAnBR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoCH,CA5DiB,kCAAlB;MAAMhB,S;AA8DN,eAAeA,SAAf","sourcesContent":["import React,{useEffect, useRef, useState} from 'react';\r\n\r\nconst SortPopup = React.memo(function SortPopup({ activeItem,items,onSelectSortType }) {\r\n    const [isVisible,setIsVisible] = useState(false)\r\n    const sortRef = useRef(null)\r\n    const label = activeItem\r\n\r\n    function toggleVisiblePopup() {\r\n        setIsVisible(!isVisible)\r\n    }\r\n\r\n    function handleOutsideClick(e) {\r\n        if (!e.path.includes(sortRef.current)) {\r\n            setIsVisible(false)\r\n        }\r\n    }\r\n\r\n    function onSelectItem(index,item) {\r\n        onSelectSortType(item)\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(activeItem);\r\n        document.body.addEventListener('click', handleOutsideClick)\r\n    },[])\r\n\r\n    return (\r\n        <div ref={ sortRef }className=\"sort\">\r\n              <div className=\"sort__label\">\r\n                <svg\r\n                  className={isVisible?'rotated':''}\r\n                  width=\"10\"\r\n                  height=\"6\"\r\n                  viewBox=\"0 0 10 6\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\r\n                    fill=\"#2C2C2C\"\r\n                  />\r\n                </svg>\r\n                <b>Сортировка по:</b>\r\n                <span onClick={toggleVisiblePopup}>{ label }</span>\r\n            </div>\r\n            {isVisible &&\r\n                <div className=\"sort__popup\">\r\n                    <ul>\r\n                        {items &&\r\n                            items.map((item, index) => (\r\n                                <li\r\n                                    key={`${item}_${index}`}\r\n                                    className={activeItem === index ? 'active' : ''}\r\n                                    onClick={() => { onSelectItem(index,item) }}>\r\n                                    {item}\r\n                                </li>\r\n                            ))}\r\n                    </ul>\r\n                </div>\r\n            }\r\n            </div>\r\n    );\r\n})\r\n\r\nexport default SortPopup;"]},"metadata":{},"sourceType":"module"}